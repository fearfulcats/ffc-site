{"version":3,"file":"chatroom-C2BSU3vx.js","sources":["../../../../../src/routes/secret/chatroom.tsx?pick=default&pick=$css"],"sourcesContent":["import { For, Show } from 'solid-js'\r\nimport { A } from \"@solidjs/router\";\r\nimport './styles.css'\r\n\r\nimport { Message, action, store } from './home';\r\n\r\nfunction ChatRoom() {\r\n    return (\r\n        <>\r\n        <div class='full'>\r\n        </div>\r\n        <div class='screensaver'>\r\n            <div class=\"header\">\r\n\r\n            <p class=\"connection\">You are currently connected to Extended Area Network 34, Section-B \"Cat Communications\" on May 9th, 20XX.</p>\r\n\r\n                <div class=\"pages\" style=\"\">\r\n                    <div>\r\n                        <A class='link' href='/secret/home'>Home</A>\r\n                        <p class=\"linkChild\">/home</p>\r\n                    </div>\r\n                    <div>\r\n                        <A class='link' href='/secret/profile'>My Profile</A>\r\n                        <p class=\"linkChild\">/profile</p>\r\n                    </div>\r\n                    <div>\r\n                        <A class='link' href='/secret/userbase'>Browse Userbase</A>\r\n                        <p class=\"linkChild\">/userbase</p>\r\n                    </div>\r\n                    <div>\r\n                        <A class='link' href='/'>Real World</A>\r\n                        <p class=\"linkChild\">/</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class='box' >Cat Communications Official Chat Room!</div>\r\n            <div style=\"display: inline;\">\r\n                <div style=\"display: flex\">\r\n                    <div class=\"view\" onClick={() => action.sHMessages()} >{store.showMessages ? \"Hide\" : \"View\"} Messages</div>\r\n                    <div class=\"view\" onClick={() => action.sHHistory()} >{store.showHistory ? \"Hide\" : \"View\"} History</div>\r\n                    <div style='width: 100%; background-color: black; z-index: 20'></div>\r\n                </div>\r\n                <Show\r\n                    when={store.showMessages || store.showHistory}\r\n                    children={<Console />}\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction Console() {\r\n    if (store.showHistory) {\r\n        return (\r\n            <div>\r\n\r\n\r\n                <div class=\"console\" style=\" padding-top: 5vh; padding-bottom: 1vh\">\r\n                    <For\r\n                        each={store.history.messageList1}\r\n                        children={(message) => <MessageDecoder message={message} />}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n\r\n\r\n                <div class=\"console\" style=\" padding-top: 5vh;\">\r\n                    <Show\r\n                        when={!store.messagesRead}\r\n                        children={\r\n                            <h1 class=\"newMessages\">You have <i>{store.messages.messageList1.length}</i> unread messages!</h1>\r\n                        }\r\n                    />\r\n\r\n                    <For\r\n                        each={store.messages.messageList1}\r\n                        children={(message) => <MessageDecoder message={message} />}\r\n                    />\r\n                    <div class='connected'>\r\n                        Users currently connected: 0\r\n                    </div>\r\n                </div>\r\n                <div style={\"display: flex\"}>\r\n                    <Show\r\n                        when={!store.messagesRead}\r\n                        children={\r\n                            <div class=\"view\" onClick={() => store.messagesRead = true}>Mark as Read</div>\r\n                        }\r\n                    />\r\n\r\n                    <div class=\"arrow\">{\">\"}</div>\r\n                    <Show\r\n                        when={!store.sendAttempt}\r\n                        children={\r\n                            <input class=\"consoleInput\" />\r\n                        }\r\n                        fallback={\r\n                            <input disabled placeholder='ERROR 23: AUTHORIZATION EXPIRED' class=\"consoleInput\" />\r\n                        }\r\n                    />\r\n\r\n                    <div class=\"view\" onClick={() => store.sendAttempt = true}>Send</div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst MessageDecoder = (props: { message: Message }) => {\r\n    const message = props.message\r\n    if (message.server) {\r\n        if (message.connected) {\r\n            return (<p class=\"speakerServer\"> + User [{message.author}] has connected!</p>)\r\n        } else {\r\n            return (<p class=\"speakerServer\"> - User [{message.author}] has disconnected!</p>)\r\n        }\r\n    } else {\r\n        switch (message.author) {\r\n            case 'Cozy_Cat':\r\n                return (<p class=\"speakerBlue\" textContent={\"> \" + message.content} />)\r\n            case 'Rozebur':\r\n                return (<p class=\"speakerRed\" textContent={\"> \" + message.content} />)\r\n            case 'SoulSella':\r\n                return (<p class=\"speakerYellow\" textContent={\"> \" + message.content} />)\r\n            case 'KeytarE':\r\n                return (<p class=\"speakerLime\" textContent={\"> \" + message.content} />)\r\n            case 'MaxIsWax':\r\n                return (<p class=\"speakerGreen\" textContent={\"> \" + message.content} />)\r\n            case 'ASomberGaze':\r\n                return (<p class=\"speakerPGreen\" textContent={\"> \" + message.content} />)\r\n            default:\r\n                return (<p textContent={\"error\"} />)\r\n        }\r\n    }\r\n}\r\n\r\nexport default ChatRoom"],"names":["ChatRoom","_$getNextElement","_tmpl$","_el$2","_tmpl$2","_el$3","firstChild","_el$4","_el$5","nextSibling","_el$6","_el$8","_el$9","_co$","_$getNextMarker","_el$10","_el$12","_el$13","_co$2","_el$14","_el$16","_el$17","_co$3","_el$18","_el$20","_el$21","_co$4","_el$22","_el$23","_el$24","_el$25","_el$27","_el$28","_co$5","_el$29","_el$31","_el$32","_co$6","_el$33","_el$34","_co$7","_$createComponent","A","href","children","$$click","action","sHMessages","_$insert","store","showMessages","sHHistory","showHistory","Show","when","Console","_$runHydrationEvents","_el$35","_tmpl$3","_el$36","For","each","history","messageList1","MessageDecoder","message","_el$37","_tmpl$4","_el$38","_el$40","_el$41","_co$8","_el$42","_el$43","_co$9","_el$44","_el$47","_el$48","_co$10","_el$45","_el$49","_el$50","_co$11","_el$46","messagesRead","_el$51","_tmpl$5","_el$52","_el$53","messages","length","_el$54","_tmpl$6","sendAttempt","_tmpl$7","fallback","_tmpl$8","props","server","connected","_el$57","_tmpl$9","_el$58","_el$60","_el$61","_co$12","author","_el$62","_tmpl$10","_el$63","_el$65","_el$66","_co$13","_el$67","_tmpl$11","_el$68","_$effect","_$setProperty","content","_el$69","_tmpl$12","_el$70","_el$71","_tmpl$13","_el$72","_el$73","_tmpl$14","_el$74","_el$75","_tmpl$15","_el$76","_el$77","_tmpl$16","_el$78","_el$79","_tmpl$17","_$delegateEvents"],"mappings":"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"}